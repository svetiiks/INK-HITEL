<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Hotel Room Manager</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background: #f5f5f5;
      padding: 20px;
      display: flex;
      flex-direction: column;
      align-items: center;
    }
    .info {
      margin-bottom: 20px;
      font-size: 16px;
      font-weight: bold;
      color: #333;
    }
    .floor {
      display: flex;
      justify-content: center;
      margin-bottom: 10px;
      gap: 6px;
    }
    .room {
      width: 25px;
      height: 25px;
      display: flex;
      align-items: center;
      justify-content: center;
      font-weight: bold;
      font-size: 12px; /* –Ω–µ–º–Ω–æ–≥–æ —É–º–µ–Ω—å—à–µ–Ω–æ, —á—Ç–æ–±—ã —Ü–∏—Ñ—Ä—ã –≤–ª–µ–∑–∞–ª–∏ */
      color: white;
      border: 2px solid #444;
      border-radius: 3px;
      cursor: pointer;
      user-select: none;
      transition: transform 0.1s;
    }
    .room:hover {
      transform: scale(1.1);
    }
    .free {
      background-color: #4CAF50;
    }
    .occupied {
      background-color: #F44336;
    }
  </style>
</head>
<body>

  <div class="info">üü¢ Green ‚Äî free | üî¥ Red ‚Äî occupied</div>

  <!-- 10‚Äì19 -->
  <div class="floor" id="floor10"></div>
  <!-- 20‚Äì29 -->
  <div class="floor" id="floor20"></div>
  <!-- 30‚Äì39 -->
  <div class="floor" id="floor30"></div>
  <!-- 40‚Äì49 -->
  <div class="floor" id="floor40"></div>
  <!-- 50‚Äì59 -->
  <div class="floor" id="floor50"></div>
  <!-- 60, 61 -->
  <div class="floor" id="floor60"></div>

  <script>
    // –í—Å–µ –Ω–æ–º–µ—Ä–∞ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
    const floors = [
      { id: 'floor10', rooms: Array.from({length: 10}, (_, i) => 10 + i) },
      { id: 'floor20', rooms: Array.from({length: 10}, (_, i) => 20 + i) },
      { id: 'floor30', rooms: Array.from({length: 10}, (_, i) => 30 + i) },
      { id: 'floor40', rooms: Array.from({length: 10}, (_, i) => 40 + i) },
      { id: 'floor50', rooms: Array.from({length: 10}, (_, i) => 50 + i) },
      { id: 'floor60', rooms: [60, 61] }
    ];

    // –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–∑ localStorage
    function loadRoomStates() {
      const saved = localStorage.getItem('hotelRoomStates');
      return saved ? JSON.parse(saved) : {};
    }

    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤ localStorage
    function saveRoomStates(states) {
      localStorage.setItem('hotelRoomStates', JSON.stringify(states));
    }

    // –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–Ω–∞—Ç
    function createRooms() {
      const states = loadRoomStates();

      floors.forEach(floor => {
        const container = document.getElementById(floor.id);
        container.innerHTML = ''; // –æ—á–∏—Å—Ç–∏—Ç—å

        floor.rooms.forEach(roomNum => {
          const room = document.createElement('div');
          room.className = 'room';
          room.textContent = roomNum;
          room.dataset.room = roomNum;

          // –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ
          if (states[roomNum] === 'occupied') {
            room.classList.add('occupied');
          } else {
            room.classList.add('free');
          }

          room.addEventListener('click', () => {
            room.classList.toggle('free');
            room.classList.toggle('occupied');

            // –û–±–Ω–æ–≤–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤ –æ–±—ä–µ–∫—Ç–µ
            const newStates = loadRoomStates();
            newStates[roomNum] = room.classList.contains('occupied') ? 'occupied' : 'free';
            saveRoomStates(newStates);
          });

          container.appendChild(room);
        });
      });
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    createRooms();
  </script>
</body>
</html>
